# Configuration file

##########################################################################################################
# _general
#--------------------------------------------------------------------------------------------------------#
# General and/or miscellaneous options.
##########################################################################################################

_general {
    # If true, the mod will start up in debug mode.
    #    >> Boolean:[ Valid_Values={ true, false }, Default=false ]
    B:_debug_mode=false

    # Chance for an entity on the depacify list to spawn aggressive, instead of just neutral.
    #    >> Double:[ Range={ 0.0, 1.0 }, Default=0.0 ]
    D:depacify_aggressive_chance=0.05

    # List of passive mobs (by entity id) that are made "neutral" like wolves.
    # You may put a tilde (~) in front of any entity id to make it specific; specific entity ids
    # will not count any entities extending (i.e., based on) the specified entity.
    # Additional number after the entity id is the chance (0.0 to 1.0) for entities of that type to spawn with the AI.
    # May or may not work on mod mobs.
    #    >> Entity_Array:[ Value={ entity_id <extra_data>, ~entity_id <extra_data> }, Default={ minecraft:chicken 1.0, minecraft:cow 1.0, minecraft:pig 1.0, minecraft:sheep 1.0, minecraft:rabbit 1.0, minecraft:squid 1.0 } ]
    S:depacify_list <
        animania:buck_alpine 0.2
        animania:buck_angora 0.2
        animania:buck_fainting 0.2
        animania:buck_kiko 0.2
        animania:buck_kinder 0.2
        animania:buck_nigerian_dwarf 0.2
        animania:buck_pygmy 0.2
        animania:doe_alpine 0.1
        animania:doe_angora 0.1
        animania:doe_fainting 0.1
        animania:doe_kiko 0.1
        animania:doe_kinder 0.1
        animania:doe_nigerian_dwarf 0.1
        animania:doe_pygmy 0.1
        animania:bull_angus 0.9
        animania:bull_friesian 0.9
        animania:bull_hereford 0.9
        animania:bull_highland 0.9
        animania:bull_holstein 0.9
        animania:bull_jersey 0.9
        animania:bull_longhorn 0.9
        animania:bull_mooshroom 0.9
        animania:cow_angus 0.3
        animania:cow_friesian 0.3
        animania:cow_hereford 0.3
        animania:cow_highland 0.3
        animania:cow_holstein 0.3
        animania:cow_jersey 0.3
        animania:cow_longhorn 0.3
        animania:cow_mooshroom 0.3
        animania:female_wolf 1.0
        animania:peachick_blue 0.0
        animania:peachick_charcoal 0.0
        animania:peachick_opal 0.0
        animania:peachick_peach 0.0
        animania:peachick_purple 0.0
        animania:peachick_taupe 0.0
        animania:peachick_white 0.0
        animania:peacock_blue 0.4
        animania:peacock_charcoal 0.4
        animania:peacock_opal 0.4
        animania:peacock_peach 0.4
        animania:peacock_purple 0.4
        animania:peacock_taupe 0.4
        animania:peacock_white 0.4
        animania:tom_ocelot 0.0
        animania:queen_ocelot 0.1
        animania:ewe_dorper 0.0
        animania:ewe_dorset 0.0
        animania:ewe_friesian 0.0
        animania:ewe_jacob 0.0
        animania:ewe_merino 0.0
        animania:ewe_suffolk 0.0
        animania:ram_dorper 0.2
        animania:ram_dorset 0.2
        animania:ram_friesian 0.2
        animania:ram_jacob 0.2
        animania:ram_merino 0.2
        animania:ram_suffolk 0.2
        animania:rooster_leghorn 0.7
        animania:rooster_orpington 0.7
        animania:rooster_plymouth_rock 0.7
        animania:rooster_rhode_island_red 0.7
        animania:rooster_wyandotte 0.7
        animania:hog_duroc 0.2
        animania:hog_hampshire 0.2
        animania:hog_large_black 0.2
        animania:hog_large_white 0.2
        animania:hog_old_spot 0.2
        animania:hog_yorkshire 0.2
        animania:sow_duroc 0.3
        animania:sow_hampshire 0.3
        animania:sow_large_black 0.3
        animania:sow_large_white 0.3
        animania:sow_old_spot 0.3
        animania:sow_yorkshire 0.3
        horse_colors:horse_felinoid 0.2
     >

    # If true, passive mobs will seek out and eat the items used to breed them laying on the floor.
    #    >> Boolean:[ Valid_Values={ true, false }, Default=true ]
    B:eat_breeding_items=true

    # If true, when mobs eat breeding items off the floor, they will regain health like wolves.
    #    >> Boolean:[ Valid_Values={ true, false }, Default=true ]
    B:eating_heals=true
}


##########################################################################################################
# door_breaking
#--------------------------------------------------------------------------------------------------------#
# Options to customize monsters' door-breaking behavior.
##########################################################################################################

door_breaking {
    # If true, mobs will destroy doors that are blocking their path.
    #    >> Boolean:[ Valid_Values={ true, false }, Default=true ]
    B:_enabled=true

    # The block breaking speed multiplier for mobs, relative to the player's block breaking speed.
    #    >> Float:[ Range={ 0.0, Infinity }, Default=0.33 ]
    D:break_speed=0.33

    # If true, broken blocks will leave item drops.
    #    >> Boolean:[ Valid_Values={ true, false }, Default=true ]
    B:leave_drops=true

    # If true, creepers will be very mad about not having arms to break things with, and resort to what they know best...
    #    >> Boolean:[ Valid_Values={ true, false }, Default=true ]
    B:mad_creepers=true

    # List of mobs that can gain door-breaking AI (note that the entity must have task-based AI enabled).
    # The number after each mob is the chance for that mob type to get the AI, from 0 to 1.
    #    >> Entity_Array:[ Value={ entity_id <extra_data>, ~entity_id <extra_data> }, Default={ minecraft:zombie 1.0, minecraft:creeper 1.0, minecraft:zombie_pigman 1.0 } ]
    S:mob_list <
        minecraft:zombie 1.0
        minecraft:creeper 1.0
        minecraft:zombie_pigman 1.0
     >

    # If true, mobs will only break doors while they are chasing an attack target.
    # Setting this to false typically leads to mobs smashing into your house to get to blocks they are targeting
    # as part of an idle griefing or fiddling behavior, such as torches or chests.
    #    >> Boolean:[ Valid_Values={ true, false }, Default=true ]
    B:requires_target=true

    # If true, mobs will only target blocks they have the tools to harvest.
    # For example, they will only break iron doors with a pickaxe.
    #    >> Boolean:[ Valid_Values={ true, false }, Default=true ]
    B:requires_tools=true

    # Door blocks that can be broken by mobs chasing you.
    #    >> Block_Array:[ Value={ mod_id:block_id, mod_id:block_id[<properties>], mod_id:* }, Default={ minecraft:wooden_door, minecraft:iron_door, minecraft:trapdoor, minecraft:fence_gate, minecraft:iron_trapdoor, minecraft:spruce_fence_gate, minecraft:birch_fence_gate, minecraft:jungle_fence_gate, minecraft:dark_oak_fence_gate, minecraft:acacia_fence_gate, minecraft:spruce_door, minecraft:birch_door, minecraft:jungle_door, minecraft:acacia_door, minecraft:dark_oak_door, biomesoplenty:sacred_oak_fence_gate, biomesoplenty:cherry_fence_gate, biomesoplenty:umbran_fence_gate, biomesoplenty:fir_fence_gate, biomesoplenty:ethereal_fence_gate, biomesoplenty:magic_fence_gate, biomesoplenty:mangrove_fence_gate, biomesoplenty:palm_fence_gate, biomesoplenty:redwood_fence_gate, biomesoplenty:willow_fence_gate, biomesoplenty:pine_fence_gate, biomesoplenty:hellbark_fence_gate, biomesoplenty:jacaranda_fence_gate, biomesoplenty:mahogany_fence_gate, biomesoplenty:ebony_fence_gate, biomesoplenty:eucalyptus_fence_gate, biomesoplenty:sacred_oak_door_block, biomesoplenty:cherry_door_block, biomesoplenty:umbran_door_block, biomesoplenty:fir_door_block, biomesoplenty:ethereal_door_block, biomesoplenty:magic_door_block, biomesoplenty:mangrove_door_block, biomesoplenty:palm_door_block, biomesoplenty:redwood_door_block, biomesoplenty:willow_door_block, biomesoplenty:pine_door_block, biomesoplenty:hellbark_door_block, biomesoplenty:jacaranda_door_block, biomesoplenty:mahogany_door_block, biomesoplenty:ebony_door_block, biomesoplenty:eucalyptus_door_block, forestry:fence.gates.larch, forestry:fence.gates.fireproof.larch, forestry:fence.gates.teak, forestry:fence.gates.fireproof.teak, forestry:fence.gates.acacia, forestry:fence.gates.fireproof.acacia, forestry:fence.gates.lime, forestry:fence.gates.fireproof.lime, forestry:fence.gates.chestnut, forestry:fence.gates.fireproof.chestnut, forestry:fence.gates.wenge, forestry:fence.gates.fireproof.wenge, forestry:fence.gates.baobab, forestry:fence.gates.fireproof.baobab, forestry:fence.gates.sequoia, forestry:fence.gates.fireproof.sequoia, forestry:fence.gates.kapok, forestry:fence.gates.fireproof.kapok, forestry:fence.gates.ebony, forestry:fence.gates.fireproof.ebony, forestry:fence.gates.mahogany, forestry:fence.gates.fireproof.mahogany, forestry:fence.gates.balsa, forestry:fence.gates.fireproof.balsa, forestry:fence.gates.willow, forestry:fence.gates.fireproof.willow, forestry:fence.gates.walnut, forestry:fence.gates.fireproof.walnut, forestry:fence.gates.greenheart, forestry:fence.gates.fireproof.greenheart, forestry:fence.gates.cherry, forestry:fence.gates.fireproof.cherry, forestry:fence.gates.mahoe, forestry:fence.gates.fireproof.mahoe, forestry:fence.gates.poplar, forestry:fence.gates.fireproof.poplar, forestry:fence.gates.palm, forestry:fence.gates.fireproof.palm, forestry:fence.gates.papaya, forestry:fence.gates.fireproof.papaya, forestry:fence.gates.pine, forestry:fence.gates.fireproof.pine, forestry:fence.gates.plum, forestry:fence.gates.fireproof.plum, forestry:fence.gates.maple, forestry:fence.gates.fireproof.maple, forestry:fence.gates.citrus, forestry:fence.gates.fireproof.citrus, forestry:fence.gates.giganteum, forestry:fence.gates.fireproof.giganteum, forestry:fence.gates.ipe, forestry:fence.gates.fireproof.ipe, forestry:fence.gates.padauk, forestry:fence.gates.fireproof.padauk, forestry:fence.gates.cocobolo, forestry:fence.gates.fireproof.cocobolo, forestry:fence.gates.zebrawood, forestry:fence.gates.fireproof.zebrawood, forestry:fence.gates.vanilla.fireproof.oak, forestry:fence.gates.vanilla.fireproof.spruce, forestry:fence.gates.vanilla.fireproof.birch, forestry:fence.gates.vanilla.fireproof.jungle, forestry:fence.gates.vanilla.fireproof.acacia, forestry:fence.gates.vanilla.fireproof.dark_oak, forestry:doors.larch, forestry:doors.teak, forestry:doors.acacia, forestry:doors.lime, forestry:doors.chestnut, forestry:doors.wenge, forestry:doors.baobab, forestry:doors.sequoia, forestry:doors.kapok, forestry:doors.ebony, forestry:doors.mahogany, forestry:doors.balsa, forestry:doors.willow, forestry:doors.walnut, forestry:doors.greenheart, forestry:doors.cherry, forestry:doors.mahoe, forestry:doors.poplar, forestry:doors.palm, forestry:doors.papaya, forestry:doors.pine, forestry:doors.plum, forestry:doors.maple, forestry:doors.citrus, forestry:doors.giganteum, forestry:doors.ipe, forestry:doors.padauk, forestry:doors.cocobolo, forestry:doors.zebrawood, rustic:fence_gate_olive, rustic:fence_gate_ironwood, rustic:olive_door, rustic:ironwood_door, openblocks:ladder, quark:spruce_trapdoor, quark:birch_trapdoor, quark:jungle_trapdoor, quark:acacia_trapdoor, quark:dark_oak_trapdoor, cuisine:fence_gate, cuisine:trapdoor, cuisine:door, engineersdoors:trapdoor_concrete, engineersdoors:trapdoor_steel, engineersdoors:trapdoor_treated, engineersdoors:fencegate_aluminium, engineersdoors:fencegate_steel, engineersdoors:fencegate_treated, engineersdoors:door_concrete, engineersdoors:door_concrete_ornate, engineersdoors:door_concrete_reinforced, engineersdoors:door_steel, engineersdoors:door_steel_ornate, engineersdoors:door_steel_reinforced, engineersdoors:door_treated, engineersdoors:door_treated_ornate, engineersdoors:door_treated_reinforced, pyrotech:refractory_door, pyrotech:stone_door, tropicraft:bamboo_door, tropicraft:bamboo_fence_gate, tropicraft:thatch_fence_gate, tropicraft:chunk_fence_gate, tropicraft:palm_fence_gate, tropicraft:mahogany_fence_gate, blockcraftery:editable_trap_door, blockcraftery:editable_trap_door_reinforced, blockcraftery:editable_door, blockcraftery:editable_door_reinforced } ]
    S:target_blocks <
     >
}


##########################################################################################################
# elite_ai
#--------------------------------------------------------------------------------------------------------#
# Options to control the types of elite AI and their weighted chances of occurring.
##########################################################################################################

elite_ai {
    # List of mobs that can gain special AI patterns and their chances to gain those patterns.
    # You can specify multiple chances for each entity - each chance will be rolled and multiple AIs can stack.
    # Note that the entity must have task-based AI enabled.
    #    >> Entity_Array:[ Value={ entity_id <extra_data>, ~entity_id <extra_data> }, Default={ minecraft:zombie 0.05 0.05, minecraft:skeleton 0.2 0.05, minecraft:zombie_pigman 0.1 0.05 0.02 } ]
    S:_mob_list <
        minecraft:zombie 0.05 0.05,
        minecraft:skeleton 0.2 0.05,
        minecraft:zombie_pigman 0.1 0.05 0.02
     >

    # Weight for the barrage ai pattern to be chosen.
    #    >> Integer:[ Range={ 0, 2147483647 }, Default=1 ]
    I:ai_barrage=1

    # Weight for the charge ai pattern to be chosen.
    #    >> Integer:[ Range={ 0, 2147483647 }, Default=1 ]
    I:ai_charge=1

    # Weight for the jump ai pattern to be chosen.
    #    >> Integer:[ Range={ 0, 2147483647 }, Default=1 ]
    I:ai_jump=1

    # Weight for the leap ai pattern to be chosen.
    #    >> Integer:[ Range={ 0, 2147483647 }, Default=1 ]
    I:ai_leap=1

    # Weight for the shaman ai pattern to be chosen.
    #    >> Integer:[ Range={ 0, 2147483647 }, Default=1 ]
    I:ai_shaman=1

    # Weight for the spawner ai pattern to be chosen.
    #    >> Integer:[ Range={ 0, 2147483647 }, Default=1 ]
    I:ai_spawner=1

    # Weight for the sprint ai pattern to be chosen.
    #    >> Integer:[ Range={ 0, 2147483647 }, Default=1 ]
    I:ai_sprint=1

    # Weight for the thief ai pattern to be chosen.
    #    >> Integer:[ Range={ 0, 2147483647 }, Default=1 ]
    I:ai_thief=1

    # Weight for the throw ai pattern to be chosen.
    #    >> Integer:[ Range={ 0, 2147483647 }, Default=1 ]
    I:ai_throw=1

    # Weight for the throw_player ai pattern to be chosen.
    #    >> Integer:[ Range={ 0, 2147483647 }, Default=1 ]
    I:ai_throw_player=1

    # Flat health increase added to mobs with barrage ai.
    #    >> Double:[ Range={ -Infinity, Infinity }, Default=20.0 ]
    D:barrage_health_boost=20.0

    # Flat health increase added to mobs with charge ai.
    #    >> Double:[ Range={ -Infinity, Infinity }, Default=20.0 ]
    D:charge_health_boost=20.0

    # Knockback resistance added to mobs with charge ai.
    #    >> Double:[ Range={ 0.0, 1.0 }, Default=0.5 ]
    D:charge_knockback_resistance=0.5

    # Speed increase multiplier to mobs with leap ai. Recommended to keep this well below 0.5.
    #    >> Double:[ Range={ -Infinity, Infinity }, Default=0.1 ]
    D:leap_speed_boost=0.1

    # Amount (in half-hearts) healed by mobs with shaman ai every 2 seconds. Can be overridden by the mob's nbt data.
    #    >> Float:[ Range={ -Infinity, Infinity }, Default=1.0 ]
    D:shaman_heal_amount=1.0

    # Flat health increase added to mobs with shaman ai.
    #    >> Double:[ Range={ -Infinity, Infinity }, Default=20.0 ]
    D:shaman_health_boost=20.0

    # Flat health increase added to mobs with spawner ai.
    #    >> Double:[ Range={ -Infinity, Infinity }, Default=40.0 ]
    D:spawner_health_boost=40.0

    # Speed increase multiplier to mobs with spawner ai. Recommended to keep this well below 0.5.
    #    >> Double:[ Range={ -Infinity, Infinity }, Default=-0.2 ]
    D:spawner_speed_boost=-0.2

    # Speed increase multiplier to the boots worn by mobs with sprint ai (these can drop as loot!).
    # Recommended to keep this well below 0.5.
    #    >> Double:[ Range={ 0.0, Infinity }, Default=0.1 ]
    D:sprint_boots_speed_boost=0.1

    # Speed increase multiplier to mobs with sprint ai while they are sprinting. Can be overridden by the mob's nbt data.
    # Setting this to 0 breaks the sprint ai, so don't do that.
    #    >> Float:[ Range={ 0.0, Infinity }, Default=0.7 ]
    D:sprint_speed_boost=0.7

    # The minimum distance that mobs with thief ai will try to keep from players once they have stolen an item.
    # Can be overridden by the mob's nbt data.
    #    >> Float:[ Range={ 1.0, Infinity }, Default=16.0 ]
    D:thief_avoid_range=16.0

    # Speed increase multiplier to the helmet worn by mobs with thief ai (these can drop as loot!).
    # Recommended to keep this well below 0.5.
    #    >> Double:[ Range={ 0.0, Infinity }, Default=0.1 ]
    D:thief_helmet_speed_boost=0.1

    # Flat health increase added to mobs with throw-player ai.
    #    >> Double:[ Range={ -Infinity, Infinity }, Default=20.0 ]
    D:throw_player_health_boost=20.0

    # Flat damage increase added to the helmet worn by mobs with throw-player ai (these can drop as loot!).
    #    >> Double:[ Range={ 0.0, Infinity }, Default=1.0 ]
    D:throw_player_helmet_damage_boost=1.0

    # Knockback resistance added to mobs with throw-player ai.
    #    >> Double:[ Range={ 0.0, 1.0 }, Default=0.5 ]
    D:throw_player_knockback_resistance=0.5

    # Speed increase multiplier to mobs with throw ai. Recommended to keep this well below 0.5.
    #    >> Double:[ Range={ -Infinity, Infinity }, Default=0.1 ]
    D:throw_speed_boost=0.1
}


##########################################################################################################
# idle_activities
#--------------------------------------------------------------------------------------------------------#
# Options to customize all idle behaviors for monsters (fiddling/griefing).
##########################################################################################################

idle_activities {
    # The range at which mobs will search for blocks to target horizontally (xz-plane).
    #    >> Integer:[ Range={ 1, 2147483647 }, Default=12 ]
    I:range=12

    # The range at which mobs will search for blocks to target vertically (y-axis).
    #    >> Integer:[ Range={ 1, 2147483647 }, Default=6 ]
    I:range_vertical=6

    # Mobs' reach (from eye height) when targeting blocks. Player reach is about 4.5.
    #    >> Float:[ Range={ 0.0, Infinity }, Default=3.5 ]
    D:reach=3.5

    # The number of blocks each mob randomly searches to grief/fiddle with every "scan_delay" ticks.
    #    >> Integer:[ Range={ 1, 2147483647 }, Default=32 ]
    I:scan_count=32

    # The maximum number of blocks that can be searched in any given tick by all mobs. 0 is no limit.
    #    >> Integer:[ Range={ 0, 2147483647 }, Default=0 ]
    I:scan_count_global=0

    # The number of ticks between each block scan.
    #    >> Integer:[ Range={ 1, 2147483647 }, Default=2 ]
    I:scan_delay=2
}


##########################################################################################################
# idle_fiddling
#--------------------------------------------------------------------------------------------------------#
# Options to customize monsters' idle fiddling behavior.
##########################################################################################################

idle_fiddling {
    # If true, mobs will flip switches, press buttons, etc. while not doing anything else.
    #    >> Boolean:[ Valid_Values={ true, false }, Default=true ]
    B:_enabled=true

    # List of mobs that can gain idle fiddling AI (note that the entity must have task-based AI enabled).
    # The number after each mob is the chance for that mob type to get the AI, from 0 to 1.
    #    >> Entity_Array:[ Value={ entity_id <extra_data>, ~entity_id <extra_data> }, Default={ minecraft:skeleton 1.0, minecraft:zombie_pigman 1.0 } ]
    S:mob_list <
        minecraft:skeleton 1.0
        minecraft:zombie_pigman 1.0
     >

    # Specific blocks that will NOT be fiddled with by mobs.
    # Only really useful if you whitelist an entire namespace (*) to prevent mobs from fiddling with a few blocks from that namespace.
    #    >> Block_Array:[ Value={ mod_id:block_id, mod_id:block_id[<properties>], mod_id:* }, Default={  } ]
    S:target_blacklist <
     >

    # Specific blocks that will be fiddled with by mobs.
    #    >> Block_Array:[ Value={ mod_id:block_id, mod_id:block_id[<properties>], mod_id:* }, Default={ minecraft:tnt, minecraft:wooden_door, minecraft:lever, minecraft:stone_button, minecraft:cake, minecraft:unpowered_repeater, minecraft:powered_repeater, minecraft:fence_gate, minecraft:wooden_button, minecraft:unpowered_comparator, minecraft:powered_comparator, minecraft:spruce_fence_gate, minecraft:birch_fence_gate, minecraft:jungle_fence_gate, minecraft:dark_oak_fence_gate, minecraft:acacia_fence_gate, minecraft:spruce_door, minecraft:birch_door, minecraft:jungle_door, minecraft:acacia_door, minecraft:dark_oak_door, biomesoplenty:sacred_oak_fence_gate, biomesoplenty:cherry_fence_gate, biomesoplenty:umbran_fence_gate, biomesoplenty:fir_fence_gate, biomesoplenty:ethereal_fence_gate, biomesoplenty:magic_fence_gate, biomesoplenty:mangrove_fence_gate, biomesoplenty:palm_fence_gate, biomesoplenty:redwood_fence_gate, biomesoplenty:willow_fence_gate, biomesoplenty:pine_fence_gate, biomesoplenty:hellbark_fence_gate, biomesoplenty:jacaranda_fence_gate, biomesoplenty:mahogany_fence_gate, biomesoplenty:ebony_fence_gate, biomesoplenty:eucalyptus_fence_gate, biomesoplenty:sacred_oak_door_block, biomesoplenty:cherry_door_block, biomesoplenty:umbran_door_block, biomesoplenty:fir_door_block, biomesoplenty:ethereal_door_block, biomesoplenty:magic_door_block, biomesoplenty:mangrove_door_block, biomesoplenty:palm_door_block, biomesoplenty:redwood_door_block, biomesoplenty:willow_door_block, biomesoplenty:pine_door_block, biomesoplenty:hellbark_door_block, biomesoplenty:jacaranda_door_block, biomesoplenty:mahogany_door_block, biomesoplenty:ebony_door_block, biomesoplenty:eucalyptus_door_block, forestry:fence.gates.larch, forestry:fence.gates.fireproof.larch, forestry:fence.gates.teak, forestry:fence.gates.fireproof.teak, forestry:fence.gates.acacia, forestry:fence.gates.fireproof.acacia, forestry:fence.gates.lime, forestry:fence.gates.fireproof.lime, forestry:fence.gates.chestnut, forestry:fence.gates.fireproof.chestnut, forestry:fence.gates.wenge, forestry:fence.gates.fireproof.wenge, forestry:fence.gates.baobab, forestry:fence.gates.fireproof.baobab, forestry:fence.gates.sequoia, forestry:fence.gates.fireproof.sequoia, forestry:fence.gates.kapok, forestry:fence.gates.fireproof.kapok, forestry:fence.gates.ebony, forestry:fence.gates.fireproof.ebony, forestry:fence.gates.mahogany, forestry:fence.gates.fireproof.mahogany, forestry:fence.gates.balsa, forestry:fence.gates.fireproof.balsa, forestry:fence.gates.willow, forestry:fence.gates.fireproof.willow, forestry:fence.gates.walnut, forestry:fence.gates.fireproof.walnut, forestry:fence.gates.greenheart, forestry:fence.gates.fireproof.greenheart, forestry:fence.gates.cherry, forestry:fence.gates.fireproof.cherry, forestry:fence.gates.mahoe, forestry:fence.gates.fireproof.mahoe, forestry:fence.gates.poplar, forestry:fence.gates.fireproof.poplar, forestry:fence.gates.palm, forestry:fence.gates.fireproof.palm, forestry:fence.gates.papaya, forestry:fence.gates.fireproof.papaya, forestry:fence.gates.pine, forestry:fence.gates.fireproof.pine, forestry:fence.gates.plum, forestry:fence.gates.fireproof.plum, forestry:fence.gates.maple, forestry:fence.gates.fireproof.maple, forestry:fence.gates.citrus, forestry:fence.gates.fireproof.citrus, forestry:fence.gates.giganteum, forestry:fence.gates.fireproof.giganteum, forestry:fence.gates.ipe, forestry:fence.gates.fireproof.ipe, forestry:fence.gates.padauk, forestry:fence.gates.fireproof.padauk, forestry:fence.gates.cocobolo, forestry:fence.gates.fireproof.cocobolo, forestry:fence.gates.zebrawood, forestry:fence.gates.fireproof.zebrawood, forestry:fence.gates.vanilla.fireproof.oak, forestry:fence.gates.vanilla.fireproof.spruce, forestry:fence.gates.vanilla.fireproof.birch, forestry:fence.gates.vanilla.fireproof.jungle, forestry:fence.gates.vanilla.fireproof.acacia, forestry:fence.gates.vanilla.fireproof.dark_oak, forestry:doors.larch, forestry:doors.teak, forestry:doors.acacia, forestry:doors.lime, forestry:doors.chestnut, forestry:doors.wenge, forestry:doors.baobab, forestry:doors.sequoia, forestry:doors.kapok, forestry:doors.ebony, forestry:doors.mahogany, forestry:doors.balsa, forestry:doors.willow, forestry:doors.walnut, forestry:doors.greenheart, forestry:doors.cherry, forestry:doors.mahoe, forestry:doors.poplar, forestry:doors.palm, forestry:doors.papaya, forestry:doors.pine, forestry:doors.plum, forestry:doors.maple, forestry:doors.citrus, forestry:doors.giganteum, forestry:doors.ipe, forestry:doors.padauk, forestry:doors.cocobolo, forestry:doors.zebrawood, rustic:fence_gate_olive, rustic:fence_gate_ironwood, rustic:olive_door, rustic:ironwood_door, cuisine:fence_gate, cuisine:door, engineersdoors:fencegate_treated, engineersdoors:door_concrete, engineersdoors:door_concrete_ornate, engineersdoors:door_concrete_reinforced, engineersdoors:door_treated, engineersdoors:door_treated_ornate, engineersdoors:door_treated_reinforced, pyrotech:refractory_door, pyrotech:stone_door, tropicraft:bamboo_door, tropicraft:bamboo_fence_gate, tropicraft:thatch_fence_gate, tropicraft:chunk_fence_gate, tropicraft:palm_fence_gate, tropicraft:mahogany_fence_gate, cyclicmagic:doorbell_simple, blockcraftery:editable_door, blockcraftery:editable_door_reinforced } ]
    S:target_blocks <
     >
}


##########################################################################################################
# idle_griefing
#--------------------------------------------------------------------------------------------------------#
# Options to customize monsters' idle block breaking.
##########################################################################################################

idle_griefing {
    # If true, mobs will destroy blocks while not doing anything else.
    #    >> Boolean:[ Valid_Values={ true, false }, Default=true ]
    B:_enabled=true

    # If true, block breaking AI will automatically target all light sources (light value > 1).
    #    >> Boolean:[ Valid_Values={ true, false }, Default=true ]
    B:break_lights=true

    # If true, a lound snapping sound (the vanilla door break sound) will be played when a block
    # is broken, which is audible regardless of distance.
    #    >> Boolean:[ Valid_Values={ true, false }, Default=false ]
    B:break_sound=false

    # The block breaking speed multiplier for mobs, relative to the player's block breaking speed.
    #    >> Float:[ Range={ 0.0, Infinity }, Default=0.5 ]
    D:break_speed=0.5

    # If true, griefed blocks will leave item drops.
    #    >> Boolean:[ Valid_Values={ true, false }, Default=true ]
    B:leave_drops=true

    # If true, creepers will be very mad about not having arms to break things with, and resort to what they know best...
    #    >> Boolean:[ Valid_Values={ true, false }, Default=true ]
    B:mad_creepers=true

    # List of mobs that can gain passive griefing AI (note that the entity must have task-based AI enabled).
    # The number after each mob is the chance for that mob type to get the AI, from 0 to 1.
    #    >> Entity_Array:[ Value={ entity_id <extra_data>, ~entity_id <extra_data> }, Default={ minecraft:zombie 1.0, minecraft:creeper 1.0, minecraft:zombie_pigman 1.0 } ]
    S:mob_list <
        minecraft:zombie 1.0
        minecraft:creeper 1.0
        minecraft:zombie_pigman 1.0
     >

    # If true, mobs will only target blocks they have the tools to harvest.
    # For example, they will only break stone with a pickaxe.
    #    >> Boolean:[ Valid_Values={ true, false }, Default=false ]
    B:requires_tools=false

    # Specific blocks that will NOT be griefed by mobs.
    # Only really useful if "break_lights" is enabled or when you whitelist an entire namespace (*) to create safe
    # light sources, prevent mobs from breaking normal world gen that produces light, or for removing a few blocks
    # from a namespace that you don't want mobs to break.
    #    >> Block_Array:[ Value={ mod_id:block_id, mod_id:block_id[<properties>], mod_id:* }, Default={  } ]
    S:target_blacklist <
     >

    # Specific blocks that will be griefed by mobs.
    #    >> Block_Array:[ Value={ mod_id:block_id, mod_id:block_id[<properties>], mod_id:* }, Default={ minecraft:bed, minecraft:golden_rail, minecraft:crafting_table, minecraft:farmland, minecraft:furnace, minecraft:lit_furnace, minecraft:ladder, minecraft:enchanting_table, minecraft:brewing_stand, tconstruct:stone_ladder, engineersdecor:metal_rung_ladder, engineersdecor:metal_rung_steps, engineersdecor:treated_wood_ladder, dawnoftimebuilder:futon, tropicraft:bamboo_ladder } ]
    S:target_blocks <
        minecraft:bed
        minecraft:golden_rail
        minecraft:crafting_table
        minecraft:farmland
        minecraft:furnace
        minecraft:lit_furnace
        minecraft:ladder
        minecraft:enchanting_table
        minecraft:brewing_stand
        tconstruct:stone_ladder
        dawnoftimebuilder:futon
        tropicraft:bamboo_ladder
     >

    # Specific lootable blocks that will be griefed by mobs.
    # Unlike the normal "target_blocks", these blocks will not be targeted if they still have a loot table tag
    # (e.g., unopened dungeon chests).
    #    >> Block_Array:[ Value={ mod_id:block_id, mod_id:block_id[<properties>], mod_id:* }, Default={ minecraft:chest, minecraft:trapped_chest, tropicraft:bamboo_chest } ]
    S:target_lootable <
        minecraft:chest
        minecraft:trapped_chest
        tropicraft:bamboo_chest
     >
}


##########################################################################################################
# jockeys
#--------------------------------------------------------------------------------------------------------#
# Options relating to which mobs should act as riders or mounts.
##########################################################################################################

jockeys {
    # List of mobs that can be ridden on by normal-sized riders (not all entities can be controlled by their rider).
    #    >> Entity_Array:[ Value={ entity_id <extra_data>, ~entity_id <extra_data> }, Default={ minecraft:spider, minecraft:slime, minecraft:pig, minecraft:sheep, minecraft:cow, minecraft:polar_bear } ]
    S:mount_list <
     >

    # List of mobs that can be ridden on by small riders or normal-sized riders that are babies(not all entities can be controlled by their rider).
    #    >> Entity_Array:[ Value={ entity_id <extra_data>, ~entity_id <extra_data> }, Default={ minecraft:chicken, minecraft:rabbit } ]
    S:mount_list_small <
     >

    # List of mobs that can ride normal-sized mounts and the chance for them to gain the rider AI.
    # Note that the entity must have task-based AI enabled.
    #    >> Entity_Array:[ Value={ entity_id <extra_data>, ~entity_id <extra_data> }, Default={ minecraft:zombie 0.05, minecraft:skeleton 0.1, minecraft:creeper 0.05, minecraft:witch 0.05, minecraft:zombie_pigman 0.1 } ]
    S:rider_list <
     >

    # List of mobs that can only ride small mounts or normal-sized mounts that are babies and the chance for them to gain the rider AI.
    # Note that the entity must have task-based AI enabled.
    #    >> Entity_Array:[ Value={ entity_id <extra_data>, ~entity_id <extra_data> }, Default={  } ]
    S:rider_list_small <
     >
}


##########################################################################################################
# reaction_ai
#--------------------------------------------------------------------------------------------------------#
# Options to customize reactive behaviors.
##########################################################################################################

reaction_ai {
    # If true, all mobs will try to avoid TNT and creepers that are about to explode.
    #    >> Boolean:[ Valid_Values={ true, false }, Default=true ]
    B:avoid_explosions=true

    # If true, all mobs will call for help from nearby mobs of the same type when struck.
    # Note that this does not trigger from killing blows.
    #    >> Boolean:[ Valid_Values={ true, false }, Default=true ]
    B:call_for_help=true

    # Chance for mobs to call for help when dealt a killing blow.
    #    >> Double:[ Range={ 0.0, 1.0 }, Default=0.2 ]
    D:call_for_help_on_death=0.2

    # The chance any mob will try to sidestep an arrow fired in their direction.
    #    >> Double:[ Range={ 0.0, 1.0 }, Default=0.4 ]
    D:dodge_arrows=0.4
}


##########################################################################################################
# villages
#--------------------------------------------------------------------------------------------------------#
# Options to control village aggression and reputation.
# For reference, starting reputation is 0, minimum is -30 and maximum is 10.
# You are considered an enemy to a village if your reputation is -15 or lower.
##########################################################################################################

villages {
    # Chance for you to be marked as an aggressor (to be attacked) when you break any block in a village
    # that is not on the "block_blacklist" while your reputation is low enough.
    #    >> Double:[ Range={ 0.0, 1.0 }, Default=0.1 ]
    D:block_aggression_chance=0.1

    # The "block_aggression_chance" and "block_treasured_aggression_chance" only trigger if your reputation
    # in the village is less than or equal to this limit.
    #    >> Integer:[ Range={ -30, 10 }, Default=-5 ]
    I:block_aggression_limit=-5

    # Specific blocks that will NOT anger villagers when broken.
    #    >> Block_Array:[ Value={ mod_id:block_id, mod_id:block_id[<properties>], mod_id:* }, Default={ minecraft:stone, minecraft:grass, minecraft:dirt, minecraft:sapling, minecraft:sand, minecraft:leaves, minecraft:golden_rail, minecraft:detector_rail, minecraft:web, minecraft:tallgrass, minecraft:deadbush, minecraft:yellow_flower, minecraft:red_flower, minecraft:brown_mushroom, minecraft:red_mushroom, minecraft:tnt, minecraft:redstone_wire, minecraft:wheat, minecraft:wooden_door, minecraft:rail, minecraft:iron_door, minecraft:unlit_redstone_torch, minecraft:snow_layer, minecraft:ice, minecraft:cactus, minecraft:reeds, minecraft:pumpkin, minecraft:lit_pumpkin, minecraft:unpowered_repeater, minecraft:powered_repeater, minecraft:brown_mushroom_block, minecraft:red_mushroom_block, minecraft:melon_block, minecraft:pumpkin_stem, minecraft:melon_stem, minecraft:vine, minecraft:fence_gate, minecraft:mycelium, minecraft:waterlily, minecraft:nether_wart, minecraft:cocoa, minecraft:tripwire_hook, minecraft:tripwire, minecraft:flower_pot, minecraft:carrots, minecraft:potatoes, minecraft:skull, minecraft:unpowered_comparator, minecraft:activator_rail, minecraft:leaves2, minecraft:slime, minecraft:packed_ice, minecraft:double_plant, minecraft:spruce_fence_gate, minecraft:birch_fence_gate, minecraft:jungle_fence_gate, minecraft:dark_oak_fence_gate, minecraft:acacia_fence_gate, minecraft:spruce_door, minecraft:birch_door, minecraft:jungle_door, minecraft:acacia_door, minecraft:dark_oak_door, minecraft:beetroots, minecraft:frosted_ice, minecraft:structure_void, minecraft:white_shulker_box, minecraft:orange_shulker_box, minecraft:magenta_shulker_box, minecraft:light_blue_shulker_box, minecraft:yellow_shulker_box, minecraft:lime_shulker_box, minecraft:pink_shulker_box, minecraft:gray_shulker_box, minecraft:silver_shulker_box, minecraft:cyan_shulker_box, minecraft:purple_shulker_box, minecraft:blue_shulker_box, minecraft:brown_shulker_box, minecraft:green_shulker_box, minecraft:red_shulker_box, minecraft:black_shulker_box, biomesoplenty:grass, biomesoplenty:leaves_0, biomesoplenty:leaves_1, biomesoplenty:leaves_2, biomesoplenty:leaves_3, biomesoplenty:leaves_4, biomesoplenty:leaves_5, biomesoplenty:leaves_6, biomesoplenty:sacred_oak_fence_gate, biomesoplenty:cherry_fence_gate, biomesoplenty:umbran_fence_gate, biomesoplenty:fir_fence_gate, biomesoplenty:ethereal_fence_gate, biomesoplenty:magic_fence_gate, biomesoplenty:mangrove_fence_gate, biomesoplenty:palm_fence_gate, biomesoplenty:redwood_fence_gate, biomesoplenty:willow_fence_gate, biomesoplenty:pine_fence_gate, biomesoplenty:hellbark_fence_gate, biomesoplenty:jacaranda_fence_gate, biomesoplenty:mahogany_fence_gate, biomesoplenty:ebony_fence_gate, biomesoplenty:eucalyptus_fence_gate, biomesoplenty:sacred_oak_door_block, biomesoplenty:cherry_door_block, biomesoplenty:umbran_door_block, biomesoplenty:fir_door_block, biomesoplenty:ethereal_door_block, biomesoplenty:magic_door_block, biomesoplenty:mangrove_door_block, biomesoplenty:palm_door_block, biomesoplenty:redwood_door_block, biomesoplenty:willow_door_block, biomesoplenty:pine_door_block, biomesoplenty:hellbark_door_block, biomesoplenty:jacaranda_door_block, biomesoplenty:mahogany_door_block, biomesoplenty:ebony_door_block, biomesoplenty:eucalyptus_door_block, biomesoplenty:seaweed, biomesoplenty:waterlily, biomesoplenty:sapling_0, biomesoplenty:sapling_1, biomesoplenty:sapling_2, biomesoplenty:plant_0, biomesoplenty:plant_1, biomesoplenty:double_plant, biomesoplenty:mushroom, biomesoplenty:flower_0, biomesoplenty:flower_1, biomesoplenty:ivy, biomesoplenty:willow_vine, forestry:candle, forestry:stump, forestry:mushroom, forestry:fluid.bio.ethanol, forestry:fluid.biomass, forestry:fluid.glass, forestry:fluid.for.honey, forestry:fluid.ice, forestry:fluid.juice, forestry:fluid.milk, forestry:fluid.seed.oil, forestry:fluid.short.mead, forestry:fence.gates.larch, forestry:fence.gates.fireproof.larch, forestry:fence.gates.teak, forestry:fence.gates.fireproof.teak, forestry:fence.gates.acacia, forestry:fence.gates.fireproof.acacia, forestry:fence.gates.lime, forestry:fence.gates.fireproof.lime, forestry:fence.gates.chestnut, forestry:fence.gates.fireproof.chestnut, forestry:fence.gates.wenge, forestry:fence.gates.fireproof.wenge, forestry:fence.gates.baobab, forestry:fence.gates.fireproof.baobab, forestry:fence.gates.sequoia, forestry:fence.gates.fireproof.sequoia, forestry:fence.gates.kapok, forestry:fence.gates.fireproof.kapok, forestry:fence.gates.ebony, forestry:fence.gates.fireproof.ebony, forestry:fence.gates.mahogany, forestry:fence.gates.fireproof.mahogany, forestry:fence.gates.balsa, forestry:fence.gates.fireproof.balsa, forestry:fence.gates.willow, forestry:fence.gates.fireproof.willow, forestry:fence.gates.walnut, forestry:fence.gates.fireproof.walnut, forestry:fence.gates.greenheart, forestry:fence.gates.fireproof.greenheart, forestry:fence.gates.cherry, forestry:fence.gates.fireproof.cherry, forestry:fence.gates.mahoe, forestry:fence.gates.fireproof.mahoe, forestry:fence.gates.poplar, forestry:fence.gates.fireproof.poplar, forestry:fence.gates.palm, forestry:fence.gates.fireproof.palm, forestry:fence.gates.papaya, forestry:fence.gates.fireproof.papaya, forestry:fence.gates.pine, forestry:fence.gates.fireproof.pine, forestry:fence.gates.plum, forestry:fence.gates.fireproof.plum, forestry:fence.gates.maple, forestry:fence.gates.fireproof.maple, forestry:fence.gates.citrus, forestry:fence.gates.fireproof.citrus, forestry:fence.gates.giganteum, forestry:fence.gates.fireproof.giganteum, forestry:fence.gates.ipe, forestry:fence.gates.fireproof.ipe, forestry:fence.gates.padauk, forestry:fence.gates.fireproof.padauk, forestry:fence.gates.cocobolo, forestry:fence.gates.fireproof.cocobolo, forestry:fence.gates.zebrawood, forestry:fence.gates.fireproof.zebrawood, forestry:fence.gates.vanilla.fireproof.oak, forestry:fence.gates.vanilla.fireproof.spruce, forestry:fence.gates.vanilla.fireproof.birch, forestry:fence.gates.vanilla.fireproof.jungle, forestry:fence.gates.vanilla.fireproof.acacia, forestry:fence.gates.vanilla.fireproof.dark_oak, forestry:doors.larch, forestry:doors.teak, forestry:doors.acacia, forestry:doors.lime, forestry:doors.chestnut, forestry:doors.wenge, forestry:doors.baobab, forestry:doors.sequoia, forestry:doors.kapok, forestry:doors.ebony, forestry:doors.mahogany, forestry:doors.balsa, forestry:doors.willow, forestry:doors.walnut, forestry:doors.greenheart, forestry:doors.cherry, forestry:doors.mahoe, forestry:doors.poplar, forestry:doors.palm, forestry:doors.papaya, forestry:doors.pine, forestry:doors.plum, forestry:doors.maple, forestry:doors.citrus, forestry:doors.giganteum, forestry:doors.ipe, forestry:doors.padauk, forestry:doors.cocobolo, forestry:doors.zebrawood, forestry:sapling_ge, forestry:leaves, forestry:leaves.default.0, forestry:leaves.default.1, forestry:leaves.default.2, forestry:leaves.default.3, forestry:leaves.default.4, forestry:leaves.default.5, forestry:leaves.default.6, forestry:leaves.default.7, forestry:leaves.default.8, forestry:leaves.default.fruit.0, forestry:leaves.default.fruit.1, forestry:leaves.decorative.0, forestry:leaves.decorative.1, forestry:leaves.decorative.2, forestry:pods.dates, forestry:pods.cocoa, forestry:pods.papaya, forestry:cocoon, forestry:ash_block_0, forestry:ash_block_1, forestry:ash_block_2, forestry:ash_block_3, reccomplex:generic_space, reccomplex:generic_solid, reccomplex:structure_generator, reccomplex:maze_generator, reccomplex:weighted_command_block, reccomplex:spawn_script, rustic:olive_oil, rustic:ironberry_juice, rustic:wildberry_juice, rustic:grape_juice, rustic:apple_juice, rustic:ale_wort, rustic:honey, rustic:leaves, rustic:sapling, rustic:fence_gate_olive, rustic:fence_gate_ironwood, rustic:tomato_crop, rustic:chili_crop, rustic:wildberry_bush, rustic:grape_stem, rustic:grape_leaves, rustic:apple_seeds, rustic:sapling_apple, rustic:leaves_apple, rustic:olive_door, rustic:ironwood_door, rustic:aloe_vera, rustic:blood_orchid, rustic:chamomile, rustic:cloudsbluff, rustic:cohosh, rustic:core_root, rustic:deathstalk_mushroom, rustic:ginseng, rustic:horsetail, rustic:marsh_mallow, rustic:mooncap_mushroom, rustic:wind_thistle, rustic:leaves0, openblocks:flag, openblocks:paint_can, plustic:plustic.molten_alumite, plustic:plustic.molten_invar, plustic:plustic.molten_iridium, plustic:plustic.molten_osmium, plustic:plustic.molten_refinedobsidian, plustic:plustic.molten_refinedglowstone, plustic:plustic.molten_osgloglas, plustic:plustic.molten_osmiridium, adchimneys:cobblestone_basalt, adchimneys:masonry_brick_block, animania:block_seeds, animania:block_straw, appliedenergistics2:tiny_tnt, aquaacrobatics:bubble_column, artisanworktables:tab_icon, quark:gunpowder_block, quark:variant_leaves, quark:variant_sapling, quark:colored_flowerpot_white, quark:colored_flowerpot_orange, quark:colored_flowerpot_magenta, quark:colored_flowerpot_light_blue, quark:colored_flowerpot_yellow, quark:colored_flowerpot_lime, quark:colored_flowerpot_pink, quark:colored_flowerpot_gray, quark:colored_flowerpot_silver, quark:colored_flowerpot_cyan, quark:colored_flowerpot_purple, quark:colored_flowerpot_blue, quark:colored_flowerpot_brown, quark:colored_flowerpot_green, quark:colored_flowerpot_red, quark:colored_flowerpot_black, quark:color_slime, tconstruct:wood_rail, tconstruct:wood_rail_trapdoor, tconstruct:slime_channel, tconstruct:molten_iron, tconstruct:molten_pigiron, tconstruct:molten_knightslime, tconstruct:molten_alubrass, tconstruct:molten_cobalt, tconstruct:molten_ardite, tconstruct:molten_manyullyn, tconstruct:molten_copper, tconstruct:molten_bronze, tconstruct:molten_lead, tconstruct:molten_silver, tconstruct:molten_electrum, tconstruct:molten_steel, tconstruct:molten_gold, tconstruct:molten_brass, tconstruct:molten_tin, tconstruct:molten_nickel, tconstruct:molten_zinc, tconstruct:molten_aluminum, tconstruct:molten_stone, tconstruct:molten_obsidian, tconstruct:molten_clay, tconstruct:molten_dirt, tconstruct:molten_emerald, tconstruct:molten_glass, tconstruct:blood, tconstruct:milk, tconstruct:purpleslime, tconstruct:slime, immersiveengineering:hemp, immersiveengineering:fake_light, immersiveengineering:fluidcreosote, immersiveengineering:fluidplantoil, immersiveengineering:fluidethanol, immersiveengineering:fluidbiodiesel, immersiveengineering:fluidconcrete, immersiveengineering:molten_uranium, immersiveengineering:molten_constantan, coroutil:blank, mcmultipart:multipart, mekanism:obsidiantnt, dynamictrees:rootydirtfake, dynamictrees:sapling, dynamictrees:bonsaipot, dynamictrees:fruitcocoa, dynamictrees:fruit, dynamictrees:leaves0, dynamictrees:leaves1, crocodilite:overgrown_granite, crocodilite:overgrown_diorite, crocodilite:overgrown_andesite, crocodilite:quartzite_rock, crocodilite:stick, crocodilite:overgrown_marble, crocodilite:overgrown_limestone, crocodilite:overgrown_slate, crocodilite:overgrown_jasper, darkutils:fake_tnt, darkutils:ender_tether, darkutils:slime_dyed, dawnoftimebuilder:slab_ochre_roof_tiles, dawnoftimebuilder:slab_double_ochre_roof_tiles, dawnoftimebuilder:camellia, dawnoftimebuilder:mulberry, dawnoftimebuilder:rice, dawnoftimebuilder:commelina, dawnoftimebuilder:maize, dynamictreesbop:leaves_flowering, dynamictreesbop:leaves_flowering_peach, dynamictreesbop:leaves_palm, dynamictreesbop:fruit_persimmon, dynamictreesbop:fruit_peach, dynamictreesbop:fruit_pear, dynamictreesbop:leaves0, dynamictreesbop:leaves1, dynamictreesbop:leaves2, dynamictreesbop:leaves3, dynamictreesbop:leaves4, dynamictreesbop:leaves5, dynamictreesbop:leaves6, dynamictreesbop:leaves7, cuisine:cucumber, cuisine:leek, cuisine:leaves_orange, cuisine:onion, cuisine:garlic, cuisine:spinach, cuisine:leaves_lemon, cuisine:leaves_citron, cuisine:sapling, cuisine:leaves_grapefruit, cuisine:green_pepper, cuisine:red_pepper, cuisine:chili, cuisine:rice, cuisine:leaves_pomelo, cuisine:bamboo_plant, cuisine:sichuan_pepper, cuisine:leaves_mandarin, cuisine:turnip, cuisine:fence_gate, cuisine:scallion, cuisine:corn, cuisine:tomato, cuisine:soybean, cuisine:ginger, cuisine:sesame, cuisine:lettuce, cuisine:sheared_leaves, cuisine:leaves_lime, cuisine:door, cuisine:chinese_cabbage, cuisine:peanut, cuisine:eggplant, cuisine:soy_milk, cuisine:milk, cuisine:soy_sauce, cuisine:rice_vinegar, cuisine:fruit_vinegar, cuisine:sesame_oil, cuisine:edible_oil, cuisine:sugarcane_juice, dynamictreescuisine:leaves_pomelo, dynamictreescuisine:leaves_citron, dynamictreescuisine:leaves_mandarin, dynamictreescuisine:leaves_grapefruit, dynamictreescuisine:leaves_orange, dynamictreescuisine:leaves_lemon, dynamictreescuisine:leaves_lime, dynamictreescuisine:fruit_pomelo, dynamictreescuisine:fruit_citron, dynamictreescuisine:fruit_mandarin, dynamictreescuisine:fruit_grapefruit, dynamictreescuisine:fruit_orange, dynamictreescuisine:fruit_lemon, dynamictreescuisine:fruit_lime, dynamictreesforestry:fruitchestnut, dynamictreesforestry:fruitwalnut, dynamictreesforestry:fruitcherry, dynamictreesforestry:fruitlemon, dynamictreesforestry:fruitplum, dynamictreesforestry:fruitdate, dynamictreesforestry:fruitpapaya, dynamictreesforestry:leaves_palm, dynamictreesforestry:leaves_papaya, dynamictreesforestry:leaves_apple, dynamictreesforestry:leaves_walnut, dynamictreesforestry:leaves_chestnut, dynamictreesforestry:leaves_cherry, dynamictreesforestry:leaves_lemon, dynamictreesforestry:leaves_plum, dynamictreesforestry:leaves_willow, dynamictreesforestry:leaves0, dynamictreesforestry:leaves1, dynamictreesforestry:leaves2, dynamictreesforestry:leaves3, dynamictreesforestry:leaves4, dynamictreesforestry:leaves5, dynamictreesforestry:leaves6, dynamictreesforestry:leaves7, dynamictreesforestry:leaves8, dynamictreesphc:fruitdate, dynamictreesphc:fruitpapaya, dynamictreesphc:fruitcherry, dynamictreesphc:fruitfig, dynamictreesphc:fruitsoursop, dynamictreesphc:fruitdragonfruit, dynamictreesphc:fruitrambutan, dynamictreesphc:fruitjackfruit, dynamictreesphc:fruitlemon, dynamictreesphc:fruitpear, dynamictreesphc:fruitolive, dynamictreesphc:fruitspiderweb, dynamictreesphc:fruitgrapefruit, dynamictreesphc:fruitpomegranate, dynamictreesphc:fruitcashew, dynamictreesphc:fruitvanillabean, dynamictreesphc:fruitstarfruit, dynamictreesphc:fruitbanana, dynamictreesphc:fruitplum, dynamictreesphc:fruitavocado, dynamictreesphc:fruitpecan, dynamictreesphc:fruitpistachio, dynamictreesphc:fruithazelnut, dynamictreesphc:fruitlime, dynamictreesphc:fruitpeppercorn, dynamictreesphc:fruitalmond, dynamictreesphc:fruitgooseberry, dynamictreesphc:fruitpeach, dynamictreesphc:fruitchestnut, dynamictreesphc:fruitpawpaw, dynamictreesphc:fruitcoconut, dynamictreesphc:fruitmango, dynamictreesphc:fruitapricot, dynamictreesphc:fruitorange, dynamictreesphc:fruitwalnut, dynamictreesphc:fruitlychee, dynamictreesphc:fruitpersimmon, dynamictreesphc:fruitguava, dynamictreesphc:fruitbreadfruit, dynamictreesphc:fruitnutmeg, dynamictreesphc:fruitdurian, dynamictreesphc:fruittamarind, dynamictreesphc:banana_sucker, dynamictreesphc:leaves_palm, dynamictreesphc:leaves_dragonfruit, dynamictreesphc:passionfruit_vine, dynamictreesphc:passionfruit_vine_age0, dynamictreesphc:passionfruit_vine_age1, dynamictreesphc:passionfruit_vine_age2, dynamictreesphc:passionfruit_vine_age3, dynamictreesphc:passionfruit_sapling, dynamictreesphc:leaves0, dynamictreesquark:leaves0, emergingtechnology:ladder, emergingtechnology:nutrientblock, emergingtechnology:carbondioxideblock, engineersdoors:fencegate_aluminium, engineersdoors:fencegate_steel, engineersdoors:fencegate_treated, engineersdoors:door_concrete, engineersdoors:door_concrete_ornate, engineersdoors:door_concrete_reinforced, engineersdoors:door_steel, engineersdoors:door_steel_ornate, engineersdoors:door_steel_reinforced, engineersdoors:door_treated, engineersdoors:door_treated_ornate, engineersdoors:door_treated_reinforced, futuremc:honey_block, futuremc:sweet_berry_bush, futuremc:bamboo, greenery:seagrass, greenery:rivergrass, greenery:cattail, greenery:arrowhead, greenery:grass, greenery:tallgrass, greenery:tallfern, greenery:ryegrass, greenery:nettle, greenery:barley, greenery:kelp, immersivepetroleum:fluid_crude_oil, immersivepetroleum:fluid_diesel, immersivepetroleum:fluid_lubricant, immersivepetroleum:fluid_gasoline, immersivepetroleum:fluid_napalm, immersivepetroleum:dummy, immersivetech:fluidsteam, immersivetech:exhauststeam, immersivetech:fluiddistwater, immersivetech:fluidfluegas, immersivetech:fluidhighpressuresteam, immersivetech:fluidhotwater, immersivetech:fluidmoltensalt, immersivetech:fluidmoltensodium, immersivetech:fluidsuperheatedmoltensodium, immersivetech:fluidchlorine, pyrotech:fluid.liquid_clay, pyrotech:fluid.pyroberry_wine, pyrotech:fluid.gloamberry_wine, pyrotech:fluid.freckleberry_wine, pyrotech:freckleberry_plant, pyrotech:rock_grass, pyrotech:refractory_door, pyrotech:stone_door, pyrotech:straw_bed, pyrotech:fluid.tannin, pyrotech:fluid.lamp_oil, pyrotech:torch_fiber, pyrotech:torch_stone, pyrotech:fluid.wood_tar, pyrotech:fluid.coal_tar, redstoneplusplus:half_slime, redstoneplusplus:half_slime_red, redstoneplusplus:half_slime_blue, redstoneplusplus:half_slime_cyan, redstoneplusplus:half_slime_magenta, redstoneplusplus:half_slime_yellow, redstoneplusplus:dummy_hopper, redstoneplusplus:debug, simpledifficulty:purifiedwater, simpledifficulty:saltwater, serenetweaks:blockbranches, tropicraft:flower, tropicraft:coral, tropicraft:bamboo_shoot, tropicraft:thatch_stairs, tropicraft:bamboo_stairs, tropicraft:thatch_stairs_fuzzy, tropicraft:leaves, tropicraft:leaves_fruit, tropicraft:sapling, tropicraft:pineapple, tropicraft:iris, tropicraft:coffee_bush, tropicraft:flower_pot, tropicraft:bamboo_door, tropicraft:bamboo_fence_gate, tropicraft:thatch_fence_gate, tropicraft:chunk_fence_gate, tropicraft:palm_fence_gate, tropicraft:mahogany_fence_gate, tropicraft:water, tcomplement:liquid_chocolate_liquor, tcomplement:liquid_milk_chocolate, weather2:sand_layer, harvestcraft:pamblackberrycrop, harvestcraft:pamblueberrycrop, harvestcraft:pamcandleberrycrop, harvestcraft:pamraspberrycrop, harvestcraft:pamstrawberrycrop, harvestcraft:pamcactusfruitcrop, harvestcraft:pamasparaguscrop, harvestcraft:pambarleycrop, harvestcraft:pamoatscrop, harvestcraft:pamryecrop, harvestcraft:pamcorncrop, harvestcraft:pambambooshootcrop, harvestcraft:pamcantaloupecrop, harvestcraft:pamcucumbercrop, harvestcraft:pamwintersquashcrop, harvestcraft:pamzucchinicrop, harvestcraft:pambeetcrop, harvestcraft:pamonioncrop, harvestcraft:pamparsnipcrop, harvestcraft:pampeanutcrop, harvestcraft:pamradishcrop, harvestcraft:pamrutabagacrop, harvestcraft:pamsweetpotatocrop, harvestcraft:pamturnipcrop, harvestcraft:pamrhubarbcrop, harvestcraft:pamcelerycrop, harvestcraft:pamgarliccrop, harvestcraft:pamgingercrop, harvestcraft:pamspiceleafcrop, harvestcraft:pamtealeafcrop, harvestcraft:pamcoffeebeancrop, harvestcraft:pammustardseedscrop, harvestcraft:pambroccolicrop, harvestcraft:pamcauliflowercrop, harvestcraft:pamleekcrop, harvestcraft:pamlettucecrop, harvestcraft:pamscallioncrop, harvestcraft:pamartichokecrop, harvestcraft:pambrusselsproutcrop, harvestcraft:pamcabbagecrop, harvestcraft:pamspinachcrop, harvestcraft:pamwhitemushroomcrop, harvestcraft:pambeancrop, harvestcraft:pamsoybeancrop, harvestcraft:pambellpeppercrop, harvestcraft:pamchilipeppercrop, harvestcraft:pameggplantcrop, harvestcraft:pamokracrop, harvestcraft:pampeascrop, harvestcraft:pamtomatocrop, harvestcraft:pamcottoncrop, harvestcraft:pampineapplecrop, harvestcraft:pamgrapecrop, harvestcraft:pamkiwicrop, harvestcraft:pamcranberrycrop, harvestcraft:pamricecrop, harvestcraft:pamseaweedcrop, harvestcraft:pamcurryleafcrop, harvestcraft:pamsesameseedscrop, harvestcraft:pamwaterchestnutcrop, harvestcraft:pamgigapicklecrop, harvestcraft:pamkalecrop, harvestcraft:pamagavecrop, harvestcraft:pamamaranthcrop, harvestcraft:pamarrowrootcrop, harvestcraft:pamcassavacrop, harvestcraft:pamchickpeacrop, harvestcraft:pamelderberrycrop, harvestcraft:pamflaxcrop, harvestcraft:pamgreengrapecrop, harvestcraft:pamhuckleberrycrop, harvestcraft:pamjicamacrop, harvestcraft:pamjutecrop, harvestcraft:pamkenafcrop, harvestcraft:pamkohlrabicrop, harvestcraft:pamlentilcrop, harvestcraft:pammilletcrop, harvestcraft:pammulberrycrop, harvestcraft:pamquinoacrop, harvestcraft:pamsisalcrop, harvestcraft:pamtarocrop, harvestcraft:pamtomatillocrop, harvestcraft:pamjuniperberrycrop, harvestcraft:date_sapling, harvestcraft:pamdate, harvestcraft:papaya_sapling, harvestcraft:pampapaya, harvestcraft:cherry_sapling, harvestcraft:pamcherry, harvestcraft:fig_sapling, harvestcraft:pamfig, harvestcraft:soursop_sapling, harvestcraft:pamsoursop, harvestcraft:dragonfruit_sapling, harvestcraft:pamdragonfruit, harvestcraft:rambutan_sapling, harvestcraft:pamrambutan, harvestcraft:jackfruit_sapling, harvestcraft:pamjackfruit, harvestcraft:passionfruit_sapling, harvestcraft:pampassionfruit, harvestcraft:apple_sapling, harvestcraft:pamapple, harvestcraft:lemon_sapling, harvestcraft:pamlemon, harvestcraft:pear_sapling, harvestcraft:pampear, harvestcraft:olive_sapling, harvestcraft:pamolive, harvestcraft:spiderweb_sapling, harvestcraft:pamspiderweb, harvestcraft:grapefruit_sapling, harvestcraft:pamgrapefruit, harvestcraft:pomegranate_sapling, harvestcraft:pampomegranate, harvestcraft:cashew_sapling, harvestcraft:pamcashew, harvestcraft:vanillabean_sapling, harvestcraft:pamvanillabean, harvestcraft:starfruit_sapling, harvestcraft:pamstarfruit, harvestcraft:banana_sapling, harvestcraft:pambanana, harvestcraft:plum_sapling, harvestcraft:pamplum, harvestcraft:avocado_sapling, harvestcraft:pamavocado, harvestcraft:pecan_sapling, harvestcraft:pampecan, harvestcraft:pistachio_sapling, harvestcraft:pampistachio, harvestcraft:hazelnut_sapling, harvestcraft:pamhazelnut, harvestcraft:lime_sapling, harvestcraft:pamlime, harvestcraft:peppercorn_sapling, harvestcraft:pampeppercorn, harvestcraft:almond_sapling, harvestcraft:pamalmond, harvestcraft:gooseberry_sapling, harvestcraft:pamgooseberry, harvestcraft:peach_sapling, harvestcraft:pampeach, harvestcraft:chestnut_sapling, harvestcraft:pamchestnut, harvestcraft:pawpaw_sapling, harvestcraft:pampawpaw, harvestcraft:coconut_sapling, harvestcraft:pamcoconut, harvestcraft:mango_sapling, harvestcraft:pammango, harvestcraft:apricot_sapling, harvestcraft:pamapricot, harvestcraft:orange_sapling, harvestcraft:pamorange, harvestcraft:walnut_sapling, harvestcraft:pamwalnut, harvestcraft:lychee_sapling, harvestcraft:pamlychee, harvestcraft:persimmon_sapling, harvestcraft:pampersimmon, harvestcraft:guava_sapling, harvestcraft:pamguava, harvestcraft:breadfruit_sapling, harvestcraft:pambreadfruit, harvestcraft:nutmeg_sapling, harvestcraft:pamnutmeg, harvestcraft:durian_sapling, harvestcraft:pamdurian, harvestcraft:tamarind_sapling, harvestcraft:pamtamarind, harvestcraft:cinnamon_sapling, harvestcraft:pamcinnamon, harvestcraft:maple_sapling, harvestcraft:pammaple, harvestcraft:paperbark_sapling, harvestcraft:pampaperbark, harvestcraft:beehive, harvestcraft:honey, harvestcraft:honeycomb, harvestcraft:pressedwax, harvestcraft:waxcomb, harvestcraft:aridgarden, harvestcraft:frostgarden, harvestcraft:shadedgarden, harvestcraft:soggygarden, harvestcraft:tropicalgarden, harvestcraft:windygarden, charset:logic_gate, charset:stacks_decorative, charset:wire, complex-logic:cage_lamp_light_blue, complex-logic:flat_lamp_brown, complex-logic:color_lamp_blue, complex-logic:cage_lamp_silver_inverted, complex-logic:cage_lamp_yellow_inverted, complex-logic:flat_lamp_yellow, complex-logic:cage_lamp_pink, complex-logic:color_lamp_black, complex-logic:cage_lamp_brown, complex-logic:cage_lamp_gray, complex-logic:color_lamp_light_blue_inverted, complex-logic:color_lamp_white_inverted, complex-logic:flat_lamp_white, complex-logic:flat_lamp_red, complex-logic:flat_lamp_white_inverted, complex-logic:color_lamp_brown_inverted, complex-logic:flat_lamp_gray, complex-logic:cage_lamp_brown_inverted, complex-logic:color_lamp_purple, complex-logic:color_lamp_magenta_inverted, complex-logic:color_lamp_light_blue, complex-logic:cage_lamp_magenta_inverted, complex-logic:color_lamp_cyan, complex-logic:flat_lamp_silver_inverted, complex-logic:cage_lamp_white_inverted, complex-logic:color_lamp_gray_inverted, complex-logic:flat_lamp_green_inverted, complex-logic:flat_lamp_lime_inverted, complex-logic:cage_lamp_silver, complex-logic:flat_lamp_magenta_inverted, complex-logic:cage_lamp_lime, complex-logic:flat_lamp_green, complex-logic:flat_lamp_purple_inverted, complex-logic:cage_lamp_black, complex-logic:cage_lamp_orange_inverted, complex-logic:cage_lamp_white, complex-logic:cage_lamp_purple_inverted, complex-logic:color_lamp_yellow, complex-logic:flat_lamp_black_inverted, complex-logic:cage_lamp_lime_inverted, complex-logic:cage_lamp_gray_inverted, complex-logic:flat_lamp_gray_inverted, complex-logic:color_lamp_brown, complex-logic:color_lamp_green_inverted, complex-logic:flat_lamp_silver, complex-logic:color_lamp_purple_inverted, complex-logic:cage_lamp_orange, complex-logic:color_lamp_lime, complex-logic:flat_lamp_pink, complex-logic:flat_lamp_black, complex-logic:cage_lamp_light_blue_inverted, complex-logic:cage_lamp_yellow, complex-logic:flat_lamp_orange_inverted, complex-logic:flat_lamp_purple, complex-logic:cage_lamp_blue, complex-logic:flat_lamp_cyan, complex-logic:color_lamp_black_inverted, complex-logic:flat_lamp_magenta, complex-logic:cage_lamp_pink_inverted, complex-logic:color_lamp_orange_inverted, complex-logic:color_lamp_orange, complex-logic:flat_lamp_pink_inverted, complex-logic:flat_lamp_brown_inverted, complex-logic:cage_lamp_green, complex-logic:color_lamp_lime_inverted, complex-logic:cage_lamp_red_inverted, complex-logic:color_lamp_blue_inverted, complex-logic:color_lamp_gray, complex-logic:flat_lamp_blue, complex-logic:cage_lamp_cyan, complex-logic:color_lamp_red, complex-logic:color_lamp_red_inverted, complex-logic:color_lamp_magenta, complex-logic:cage_lamp_blue_inverted, complex-logic:flat_lamp_cyan_inverted, complex-logic:flat_lamp_red_inverted, complex-logic:color_lamp_silver_inverted, complex-logic:color_lamp_cyan_inverted, complex-logic:cage_lamp_purple, complex-logic:cage_lamp_black_inverted, complex-logic:flat_lamp_light_blue, complex-logic:color_lamp_yellow_inverted, complex-logic:flat_lamp_blue_inverted, complex-logic:color_lamp_silver, complex-logic:color_lamp_green, complex-logic:flat_lamp_orange, complex-logic:flat_lamp_lime, complex-logic:cage_lamp_cyan_inverted, complex-logic:flat_lamp_light_blue_inverted, complex-logic:cage_lamp_red, complex-logic:color_lamp_pink_inverted, complex-logic:cage_lamp_magenta, complex-logic:color_lamp_pink, complex-logic:color_lamp_white, complex-logic:flat_lamp_yellow_inverted, complex-logic:cage_lamp_green_inverted, contenttweaker:pick_up_block, cyclicmagic:block_fragile, cyclicmagic:block_fragile_auto, cyclicmagic:block_fragile_weak, cyclicmagic:milk, cyclicmagic:doorbell_simple, cyclicmagic:apple, cyclicmagic:xpjuice, industrialforegoing:essence, industrialforegoing:milk, industrialforegoing:meat, industrialforegoing:latex, industrialforegoing:sewage, industrialforegoing:sludge, industrialforegoing:biofuel, industrialforegoing:if.pink_slime, industrialforegoing:if.protein, blockcraftery:editable_door, blockcraftery:editable_door_reinforced } ]
    S:block_blacklist <
     >

    # Chance for you to lose 1 reputation when you break any block in a village that is not on the
    # "block_blacklist" while your reputation is low enough.
    #    >> Double:[ Range={ 0.0, 1.0 }, Default=0.15 ]
    D:block_rep_loss_chance=0.15

    # The "block_rep_loss_chance" and "block_treasured_rep_loss_chance" only trigger if your reputation
    # in the village is equal to or less than this limit.
    #    >> Integer:[ Range={ -30, 10 }, Default=8 ]
    I:block_rep_loss_limit=8

    # Chance for you to be marked as an aggressor (to be attacked) when you break a block in a village that
    # is on the "block_treasured_list" while your reputation is low enough.
    #    >> Double:[ Range={ 0.0, 1.0 }, Default=1.0 ]
    D:block_treasured_aggression_chance=1.0

    # Specific blocks that use separate chances for aggression and rep loss from other blocks.
    #    >> Block_Array:[ Value={ mod_id:block_id, mod_id:block_id[<properties>], mod_id:* }, Default={ minecraft:emerald_block, minecraft:bookshelf, minecraft:farmland, minecraft:cake } ]
    S:block_treasured_list <
        minecraft:emerald_block
        minecraft:bookshelf
        minecraft:farmland
        minecraft:cake
     >

    # Chance for you to lose 1 reputation when you break a block in a village that is on the "block_treasured_list"
    # while your reputation is low enough.
    #    >> Double:[ Range={ 0.0, 1.0 }, Default=1.0 ]
    D:block_treasured_rep_loss_chance=1.0

    # Specific blocks that WILL aggro villagers when broken. If any blocks are specified here, they will
    # then be the only blocks that anger villagers (i.e., trigger reputation loss and aggression).
    #    >> Block_Array:[ Value={ mod_id:block_id, mod_id:block_id[<properties>], mod_id:* }, Default={  } ]
    S:block_whitelist <
     >

    # If true, the "/villageinfo" command will state the village center position.
    # As the command has unlimited search radius, disable this to prevent players from using the command
    # to easily find the nearest village.
    #    >> Boolean:[ Valid_Values={ true, false }, Default=true ]
    B:command_include_center=true

    # Chance for you to earn 1 reputation for each monster killed near a village. The only reasonable way
    # to restore rep from -15 or lower with "villagers_defend" enabled.
    #    >> Double:[ Range={ 0.0, 1.0 }, Default=0.2 ]
    D:help_rep_chance=0.2

    # If true, all players known to a village will gain 1 rep when a new house is added to a village and
    # lose 1 rep when a house is lost. Highly recommended to keep "refresh_houses" enabled when this is.
    #    >> Boolean:[ Valid_Values={ true, false }, Default=true ]
    B:house_rep=true

    # If true, all villagers will spawn with randomized names based on their profession and career.
    #    >> Boolean:[ Valid_Values={ true, false }, Default=true ]
    B:name_villagers=false

    # If true, villager names will be marked as 'always shown' so that you do not need to mouse over them
    # to see their names. Also makes them a little easier to keep track of.
    #    >> Boolean:[ Valid_Values={ true, false }, Default=true ]
    B:name_villagers_always_show=true

    # If true, houses will stay a part of a village permanently once added (until their doors are destroyed
    # or all villagers in the village are killed), instead of being constantly added/removed as villagers move around.
    #    >> Boolean:[ Valid_Values={ true, false }, Default=true ]
    B:refresh_houses=true

    # If true, particle effects will play when players lose or gain village reputation.
    #    >> Boolean:[ Valid_Values={ true, false }, Default=true ]
    B:reputation_particles=false

    # If true, villager sound effects will play when players lose or gain village reputation.
    #    >> Boolean:[ Valid_Values={ true, false }, Default=true ]
    B:reputation_sounds=false

    # If true, villagers will defend their village by attacking its aggressors and players with
    # 'hated' standing (reputation <= -15), just like their iron golems do in vanilla.
    #    >> Boolean:[ Valid_Values={ true, false }, Default=true ]
    B:villagers_defend=true
}


