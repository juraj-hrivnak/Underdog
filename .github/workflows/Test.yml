name: Build
run-name: Build number ${{ github.run_number }} by @${{ github.actor }}

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  modpack-info:
    runs-on: ubuntu-latest
    outputs:
      projectname: ${{ steps.info.outputs.projectname }}
      version: ${{ steps.info.outputs.version }}
      tag: ${{ steps.version.outputs.tag }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Get modpack info
        id: info
        run: |
            manifestjson=`cat pax/modpack/manifest.json`
            projectname=`echo $(jq -r '.name' <<< "$manifestjson")`
            echo "::set-output name=projectname::$projectname"
            version=`echo $(jq -r '.minecraft.version' <<< "$manifestjson")`
            echo "::set-output name=version::$version"
      - name: Get tag
        id: version
        uses: "WyriHaximus/github-action-get-previous-tag@v1"
        with:
          fallback: "no-version-found"
      - name: Rename changelog
        run: mv CHANGELOG.md CHANGELOG-${{ steps.version.outputs.tag }}.md
      - name: Upload changelog
        uses: actions/upload-artifact@v3
        with:
          name: changelog
          path: CHANGELOG-${{ steps.version.outputs.tag }}.md

  build-modpack:
    runs-on: ubuntu-latest
    needs: [modpack-info]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Download changelog
        uses: actions/download-artifact@v3
        with:
          name: changelog
          path: pax/modpack
      - name: Sync overrides
        run: |
          cd pax/
          chmod +x ./sync_overrides.sh
          ./sync_overrides.sh
        shell: bash
      - name: Export modpack
        run: |
          cd pax/
          sudo chmod +x ./pax
          ./pax export
      - name: Rename zip
        run: mv pax/.out/${{ needs.modpack-info.outputs.projectname }}.zip pax/.out/${{ needs.modpack-info.outputs.projectname }}-${{ needs.modpack-info.outputs.tag }}.zip
      - name: Upload zip
        uses: actions/upload-artifact@v3
        with:
          name: modpack
          path: pax/.out/${{ needs.modpack-info.outputs.projectname }}-${{ needs.modpack-info.outputs.tag }}.zip

  # build-serverpack:
  #   runs-on: ubuntu-latest
  #   needs: [modpack-info]
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3
  #     - name: Download Modpack Downloader CLI
  #       run: |
  #         mkdir ${GITHUB_WORKSPACE}/downloader
  #         mkdir ${GITHUB_WORKSPACE}/mods
  #         wget https://github.com/Nincraft/ModPackDownloader/releases/download/0.7.1/ModpackDownloader-cli-0.7.1.jar -O ${GITHUB_WORKSPACE}/downloader/ModpackDownloader-cli-0.7.1.jar
  #     - name: Download Mods
  #       run: |
  #         cd pax/
  #         sudo chmod +x ./sync_mods.sh
  #         ./sync_mods.sh
  #     - name: Export serverpack
  #       run: |
  #         cd pax/serverpack/
  #         java -jar ServerPackCreator-3.0.0-alpha.12.jar -cli
  #     - name: Rename zip
  #       run: |
  #         mv pax/serverpack/server-packs/_server_pack.zip pax/serverpack/server-packs/${{ needs.modpack-info.outputs.projectname }}-${{ needs.modpack-info.outputs.tag }}-Server-Pack.zip
  #     - name: Upload zip
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: serverpack
  #         path: pax/serverpack/server-packs/${{ needs.modpack-info.outputs.projectname }}-${{ needs.modpack-info.outputs.tag }}-Server-Pack.zip
