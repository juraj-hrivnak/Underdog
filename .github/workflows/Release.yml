name: Release
run-name: "Release #${{ github.run_number }}"

on:
  workflow_call:
    inputs:
      projectname:
        required: true
        type: string
      projectsuffix:
        required: true
        type: string
      tag:
        required: true
        type: string
      rel_type:
        required: true
        type: string
      mcversion:
        required: true
        type: string
      news:
        required: true
        type: string

# Project IDs of the modpack.
# Note that CF_TOKEN and MR_TOKENT must be set up for this to work.
env:
  CF_PROJECT_ID: "399664"
  MR_PROJECT_ID: "ZmoIrOsS"

jobs:
  release-github:
    name: Deploy to GitHub
    runs-on: ubuntu-latest
    steps:
      - name: Download modpack
        uses: actions/download-artifact@v4
        with:
          name: modpack

      - name: Download serverpack
        uses: actions/download-artifact@v4
        with:
          name: serverpack

      - name: Download changelog
        uses: actions/download-artifact@v4
        with:
          name: changelog

      - name: Create release
        uses: softprops/action-gh-release@v2
        with:
          body_path: CHANGELOG-${{ inputs.projectsuffix }}.md
          files: |
            ${{ inputs.projectname }}-${{ inputs.projectsuffix }}.zip
            ${{ inputs.projectname }}-${{ inputs.projectsuffix }}-Server-Pack.zip
          tag_name: ${{ inputs.tag }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  release-curseforge:
    name: Deploy to CurseForge
    runs-on: ubuntu-latest
    steps:
      - name: Check if CF_TOKEN exist
        shell: bash
        run: |
          if [ "${{ secrets.CF_TOKEN }}" == '' ]; then
            echo '::error::No value found for secret key `CF_TOKEN`. See https://docs.github.com/en/actions/security-guides/encrypted-secrets#creating-encrypted-secrets-for-a-repository' && exit 1
          fi

      - name: Download modpack
        uses: actions/download-artifact@v4
        with:
          name: modpack

      - name: Download serverpack
        uses: actions/download-artifact@v4
        with:
          name: serverpack

      - name: Create release
        id: cf_release
        uses: itsmeow/curseforge-upload@v3.1.2
        with:
          token: ${{ secrets.CF_TOKEN }}
          project_id: ${{ env.CF_PROJECT_ID }}
          file_path: ${{ inputs.projectname }}-${{ inputs.projectsuffix }}.zip
          display_name: ${{ inputs.projectname }}-${{ inputs.projectsuffix }}
          changelog: See https://github.com/juraj-hrivnak/Underdog/releases/tag/${{ inputs.tag }}
          changelog_type: markdown
          game_versions: ${{ inputs.mcversion }}
          game_endpoint: minecraft
          release_type: ${{ inputs.rel_type }}

      - name: Upload server pack
        uses: itsmeow/curseforge-upload@v3.1.2
        with:
          token: ${{ secrets.CF_TOKEN }}
          parent_file_id: ${{ steps.cf_release.outputs.id }}
          project_id: ${{ env.CF_PROJECT_ID }}
          file_path: ${{ inputs.projectname }}-${{ inputs.projectsuffix }}-Server-Pack.zip
          display_name: ${{ inputs.projectname }}-${{ inputs.projectsuffix }}-Server-Pack
          changelog: See https://github.com/juraj-hrivnak/Underdog/releases/tag/${{ inputs.tag }}
          changelog_type: markdown
          game_endpoint: minecraft
          release_type: ${{ inputs.rel_type }}

      - name: Create Discord message
        id: message
        shell: bash
        run: |
          message="## **${{ inputs.projectname }}** has been updated to ${{ inputs.projectsuffix }}! :tada:\n"
          message+="[CurseForge](<https://legacy.curseforge.com/minecraft/modpacks/underdog/files/${{ steps.cf_release.outputs.id }}>) • "
          message+="[GitHub](<https://github.com/juraj-hrivnak/Underdog/releases/tag/${{ inputs.tag }}>) • "
          message+="[Issues](<https://github.com/juraj-hrivnak/Underdog/issues>)\n"
          message+="### What's new?\n${{ inputs.news }}"
          echo "markdown=$message" >> $GITHUB_OUTPUT

      - name: Send Discord message
        uses: "hugoalh/send-discord-webhook-ghaction@v7.0.5"
        with:
          key: ${{ secrets.DISCORD_WEBHOOK_ANNOUNCEMENTS }}
          username: "UnderBot"
          avatar_url: "https://media.forgecdn.net/avatars/828/211/638215807562150866.png"
          content: "${{ steps.message.outputs.markdown }}"
          embeds: "[{}]"

  update-changelogs:
    name: Update Changelogs
    runs-on: ubuntu-latest
    needs: [release-github, release-curseforge]
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Download changelog
        uses: actions/download-artifact@v4
        with:
          name: changelog
          path: pax/changelogs

      - name: Move changelogs
        run: |
          rm CHANGELOG.md
          cp pax/changelogs/TEMPLATE.md CHANGELOG.md

      - name: Commit changelogs
        run: |
          git add .
          git config --local user.name "Juraj Hrivnak"
          git config --local user.email "juraj-hrivnak@users.noreply.github.com"
          git commit -m "Automatically update changelogs" -a

      - name: Push changelogs
        uses: ad-m/github-push-action@v0.8.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: main

  close-fixed-issues:
    name: Close Fixed Issues
    runs-on: ubuntu-latest
    needs: [release-github, release-curseforge]
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - name: close-fixed-in-dev
        uses: juraj-hrivnak/close-issues-based-on-label@master
        env:
          LABEL: "fixed in dev"
          VERSION: ${{ inputs.tag }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
